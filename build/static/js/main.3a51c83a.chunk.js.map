{"version":3,"sources":["components/Person.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","person","handleDelete","name","number","onClick","Filter","onChange","value","PersonForm","onSubmit","onNameChange","nameValue","onNumberChange","numberValue","type","baseURL","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","messageClass","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","newMessage","setNewMessage","newMessageClass","setNewMessageClass","useEffect","personService","showMessage","mSec","setTimeout","deletePerson","find","window","confirm","filter","catch","error","p","event","target","preventDefault","thePerson","updatedObject","map","concat","toLowerCase","includes","filtered","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a51c83a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({person, handleDelete}) => {\n  return (\n    <p>\n      {person.name} {person.number} \n      <button onClick={handleDelete}>delete</button>\n    </p>)\n}\n\nexport default Person","import React from 'react'\n\nconst Filter = ({onChange, value}) => {\n  return (\n    <div>\n      filter shown with\n      <input onChange={onChange} value={value} />\n    </div>\n  )\n}\n\nexport default Filter ","import React from 'react'\n\nconst PersonForm = ({onSubmit, onNameChange, nameValue, onNumberChange, numberValue}) => {\n  return (\n    <form onSubmit={onSubmit}>\n    <div>\n      name: <input onChange={onNameChange} value={nameValue}/>\n    </div>\n    <div>\n      number: <input onChange={onNumberChange} value={numberValue} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nexport default PersonForm","import axios from 'axios'\n\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n  return axios\n    .get(baseURL)\n    .then(response => response.data)\n}\n\nconst create = (newObject) => {\n  return axios\n    .post(baseURL, newObject)\n    .then(response => response.data)\n}\n\nconst destroy = (id) => {\n  return axios\n    .delete(`${baseURL}/${id}`)\n    .then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  return axios\n    .put(`${baseURL}/${id}`, newObject)\n    .then(response => response.data)\n}\nexport default {\n  getAll, create, destroy, update\n}","import React from 'react'\n\nconst Notification = ({ message, messageClass }) => {\n  if(message === null) {\n    return null\n  }\n  return (\n    <div className={messageClass}>{message}</div>\n  )\n}\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [newMessage, setNewMessage] = useState(null)\n  const [newMessageClass, setNewMessageClass] = useState('')\n\n  const hook = () => {\n    personService\n      .getAll()\n      .then(persons => setPersons(persons))\n  }\n\n  useEffect(hook, [])\n\n  const addName = (event) => {\n    setNewName(event.target.value)\n  }\n  const showMessage = (message, messageClass, mSec=2500) => {\n    setNewMessage(message)\n    setNewMessageClass(messageClass)\n    setTimeout(() => {\n      setNewMessage(null)\n      setNewMessageClass(\"\")\n    }, mSec)\n  }\n  const addPhoneBook = (event) => {\n    event.preventDefault()\n    const thePerson = persons.find((person) => person.name === newName)\n    if(thePerson) {\n      const approved = window.confirm(\n        `${newName} is already added to phonebook would you like to update number?`\n      );\n      if(approved) {\n          const newObject = {\n            ...thePerson, number: newNumber\n          }\n          personService\n            .update(thePerson.id, newObject)\n            .then(updatedObject => {\n              setPersons(persons.map(person => \n                updatedObject.id !== person.id ? person : updatedObject ))\n              showMessage(\n                `Updated ${thePerson.name}'s phone number`, \n                'message notification')\n            })\n        }\n    } else {\n      personService\n        .create({name: newName, number: newNumber})\n        .then(person => {\n          setPersons(persons.concat(person))\n          showMessage(`Added ${person.name}`, 'message notification')\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const addNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const filtered = (persons) =>  persons.filter((person) =>\n   person.name.toLowerCase().includes(newFilter.toLowerCase()))\n  \n\n  const personRow = (people) => {\n    return people.map(person =>\n      <Person key={person.id} person={person} handleDelete={() => {deletePerson(person.id)}}/>  \n    )\n  }\n  const deletePerson = (id) => {\n    const deletePerson = persons.find(person => id === person.id)\n   if( window.confirm(`Delete ${deletePerson.name}?`) ) {\n    personService\n    .destroy(id)\n    .then(() => {\n      setPersons(persons.filter(person => person.id !== id))\n    })\n    .catch(error => {\n      showMessage(\n        `Information of ${deletePerson.name} has already been removed from server`, \n        \"message error\"\n      )\n      setPersons(persons.filter(p => p.id !== id ))\n    })\n   }\n  }\n\n  const addFilter = (event) => {\n    setNewFilter(event.target.value)\n  }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification  message={newMessage} messageClass={newMessageClass}/>\n      <Filter onChange={addFilter} value={newFilter}/>\n      <h2>Add a new</h2>\n      <PersonForm \n        onSubmit={addPhoneBook}\n        onNumberChange={addNumber}\n        numberValue={newNumber}\n        onNameChange={addName}\n        nameValue={newName}\n      />\n      <h2>Numbers</h2>\n      {personRow(filtered(persons))}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}